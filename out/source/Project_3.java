/* autogenerated by Processing revision 1276 on 2021-11-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Project_3 extends PApplet {

PImage img;
boolean buttonRain = false;
boolean buttonLight = false;
boolean dotMove = true;
int mX,mY,mPX,mPY;//mouse position

 public void setup() {
    /* size commented out by preprocessor */;
    startPage();
    logo = loadImage("logo.png");
    loadDot();
}

 public void draw() {
    img = loadImage("forest.jpg");
    img.resize(370,410);
    if (buttonRain) {
        painting();//rain 
    }
    if (buttonLight) {
        light();
        text("Move",460,450);
    }
    /*if (dotMove) {
        for (int i=0;i<dots.size();i++) {
            dots.get(i).update();
        }
    }*/
}

 public void startPage() {
    background(203,213,220);
    PImage imgList;
    //button plates
    fill(227,197,180);
    stroke(190,146,96);
    strokeWeight(3);
    rect(440,60,160,60,28);//Distress 
    rect(440,160,160,60,28);//Complementary 
    rect(440,260,160,60,28);//button 3
    rect(440,360,160,60,28);//button 4
    strokeWeight(2);
    line(520, 260, 520, 320);//Paint & Rain
    line(520, 360, 520, 420);//Movie & Light
    //button name
    PFont font;
    font = loadFont("BernardMT-Condensed-48.vlw");
    fill(135,115,105);
    textFont(font,23);
    text("Distress", 485, 98);
    text("Complementary", 455, 198);
    text("Paint", 460, 298);
    text("Rain", 540, 298);
    text("Movie", 460, 398);
    text("Light", 540, 398);
    textSize(15);
    text("Box Select to Zoom In",150,28);
    //img plate
    stroke(195,168,119);
    noFill();
    rect(30,30,380,420,10);
}

//load img on the "img plate" 
 public void piexlload() {
    startPage();
    img.loadPixels();
    loadPixels();
    for (int x = 0;x < img.width;x++) {
        for (int y = 0;y < img.height;y++) {
            int loc = x + 35 + (y + 35) * width;
            pixels[loc] = color(img.get(PApplet.parseInt(x),PApplet.parseInt(y)));
        }
    }
    updatePixels();
}


 public void zoomIn() {
    strokeWeight(1);//show the seclect area
    noFill();
    rect(mX,mY,mPX - mX,mPY - mY);

    img.loadPixels();
    PImage bigger = createImage(mPX-mX,mPY-mY,RGB);
    bigger.loadPixels();
    //load org img on the "img plate"
    //copy the piexl of select area to top left
    for (int x = 0; x < mPX - mX; x++) {
        for (int y = 0; y < mPY - mY; y++) {
            bigger.pixels[x + y * (mPX - mX)] = pixels[x + mX + (y + mY) * width];
        }
    }
    bigger.updatePixels();
    image(bigger,40,40,(mPX - mX) * 2,(mPY - mY) * 2);
}

 public void distress() {
    img.loadPixels();
    image(img, 35, 35);
    for (int i = 0;i < (img.width * img.height / 7); i ++) {
        int loc = PApplet.parseInt(random(img.width * img.height));
        img.pixels[loc] = color(100);
    }
    img.updatePixels();
}

 public void complementary() {
    image(img, 35, 35);
    img.loadPixels();
    for (int i = 0;i < img.width * img.height;i++) {
        img.pixels[i] = 255 - img.pixels[i];
    }
    img.updatePixels();
}

 public void painting() {
    for (int i = 0;i < 90000;i++) {
        float x = random(0,360);
        float y = random(0,400);
        int c = img.get(PApplet.parseInt(x),PApplet.parseInt(y));
        fill(c);
        noStroke();
        ellipse(x + 40, y + 40, 6, 6);
    }
}

 public void movie() {
    img.loadPixels();
    loadPixels();
    for (int x = 0; x < img.width; x++) {
        for (int y = 0; y < img.height; y++) {
            int loc = x + y * img.width;
            float r = red(img.pixels[loc]);
            float maxdist = 100;
            float d = dist(x, y, 202, 222);
            float brightness = 100 * (maxdist - d) / maxdist;
            r += brightness;
            r = constrain(r, 0, 200);
            pixels[x + 35 + (y + 35) * width] = color(r);
        }
    }
    updatePixels();
}

 public void light() {
    img.loadPixels();
    loadPixels();
    for (int x = 0; x < img.width; x++) {
        for (int y = 0; y < img.height; y++) {
            int loc = x + y * img.width;
            float r,g,b;
            r = red(img.pixels[loc]);
            b = blue(img.pixels[loc]);
            g = green(img.pixels[loc]);
            float maxdist = 60;
            float d = dist(x, y, mouseX, mouseY);
            float brightness = 240 * (maxdist - d) / maxdist;
            pixels[x + 35 + (y + 35) * width] = color(r+brightness,g+brightness,b+brightness);
        }
    }
    updatePixels();
}
PImage logo;
ArrayList<Dot> dots = new ArrayList<Dot>();

 public void loadDot() {
    logo.loadPixels();
    for (int w = 0;w < logo.width;w += 5) {
        for (int h = 0;h < logo.height;h += 5) {
            int loc = w + h * logo.width;
            int c = logo.pixels[loc];
            if (c == 0 &&  w % 10 ==  0 &&  h % 10 ==  0) {//////logo background(move available)
                Dot dot = new Dot(w,h,c);
                dots.add(dot);
            } else if (c!= 0) {//////////logo text
                fill(c);
                strokeWeight(0.8f);
                circle(w + 35, h + 35, random(3,6));
            }
        }
    }
}

class Dot{
    PVector location, target,position;
    int dotColor;
    float speed,dotSize;
    Dot(int w,int h, int c) {
        setdotBegin(w,h, c);
        creatDot();
    }
     public void setdotBegin(int w, int h, int c) {
        dotSize = random(0.5f,3);
        speed = 0.5f;
        location = new PVector(w,h);
        position = location;
        dotColor = c;
    }
     public void creatDot() {
        fill(100);
        strokeWeight(0.8f);
        circle(position.x + 35, position.y + 35, dotSize);
    }
     public void update() {
        PVector mousePos = new PVector(mouseX,mouseY);
        target = new PVector(position.x + PApplet.parseInt(random( -1,1)),position.y + PApplet.parseInt(random( -1,1)));
        if (PVector.dist(position,mousePos)<10) {
            println("aaa");
            PVector dir = PVector.sub(target,position);
            dir.normalize(); 
            dir.mult(1);
            position.add(dir);
        } else if (PVector.dist(position,location)>0.01f) {
            PVector dir = PVector.sub(position,location);
            dir.normalize(); 
            dir.mult(1);
            position.add(dir);
        }
        //startPage();
        //creatDot(); 
    }
}
 public void mousePressed() {
    mX = mouseX;
    mY = mouseY;
}
 public void mouseReleased() {
    if (mouseX > 440 &&  mouseX < 600 &&  mouseY > 60 &&  mouseY < 120) {
        startPage();
        buttonRain = false;
        buttonLight = false;
        dotMove = false;
        distress();///////////////////button1: make like a broken picture
    }
    if (mouseX > 440 &&  mouseX < 600 &&  mouseY > 160 &&  mouseY < 220) {
        startPage();
        buttonRain = false;
        buttonLight = false;
        dotMove = false;
        complementary();///////////////button2: complementary color
    }
    if (mouseX > 440 &&  mouseX < 520 &&  mouseY > 260 &&  mouseY < 320) {
        startPage();
        buttonRain = false;
        buttonLight = false;
        dotMove = false;
        painting();///////////////////button3L: make like painting
    }
    if (mouseX > 520 &&  mouseX < 600 &&  mouseY > 260 &&  mouseY < 320) {
        buttonLight = false;
        dotMove = false;
        startPage();
        buttonRain = true;////////////button3R: make painting move, like rainning 
    }
    if (mouseX > 440 &&  mouseX < 520 &&  mouseY > 360 &&  mouseY < 420) {
        startPage();
        buttonRain = false;
        buttonLight = false;
        dotMove = false;
        movie();/////////////////////button4L: black and white
    }
    if (mouseX > 520 &&  mouseX < 600 &&  mouseY > 360 &&  mouseY < 420) {
        startPage();
        buttonRain = false;
        dotMove = false;
        buttonLight = true;
        light();/////////////////////button4R: like using electric torch (control by mouse)
    }
    if (mouseX > 40 &&  mouseX < 400 &&  mouseY > 40 &&  mouseY < 440) {
        buttonRain = false;
        buttonLight = false;
        dotMove = false;
        piexlload();
        mPX = mouseX;
        mPY = mouseY;
        zoomIn();///////////////////make the selected area bigger(box select by mouse)
    }
}


  public void settings() { size(640, 480, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Project_3" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
